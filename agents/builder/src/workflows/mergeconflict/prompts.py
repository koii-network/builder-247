"""Prompts for the merge conflict resolver workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in resolving merge conflicts "
        "and consolidating changes from multiple pull requests. You understand software development best "
        "practices and focus on maintaining code quality while resolving conflicts."
    ),
    "verify_tests": (
        "You need to verify that all tests pass after merging multiple PRs. If any tests fail:\n"
        "1. Analyze the test output to understand the failures\n"
        "2. Review the relevant code to identify the cause\n"
        "3. Propose and implement fixes that maintain the intent of the merged changes\n"
        "4. Verify the fixes by running tests again\n\n"
        "Continue until all tests pass.\n\n"
        "Guidelines:\n"
        "- Run the full test suite to catch any regressions\n"
        "- Make minimal changes needed to fix test failures\n"
        "- Document any fixes made in commit messages\n"
        "- Ensure fixes don't break the functionality from merged PRs\n"
        "- Consider test dependencies and environment setup\n\n"
        "Current repository state:\n{current_files}\n\n"
    ),
    "resolve_conflicts": (
        "You need to resolve merge conflicts in the following files. For each conflict:\n"
        "1. Analyze both versions of the code\n"
        "2. Understand the intent of each change\n"
        "3. Determine how to combine the changes while preserving functionality\n"
        "4. Ensure the resolution maintains code quality and follows project conventions\n\n"
        "Guidelines for conflict resolution:\n"
        "- Preserve the intent of both changes when possible\n"
        "- Maintain consistent code style\n"
        "- Ensure the resolution doesn't introduce new bugs\n"
        "- Add comments to explain complex resolutions\n"
        "- Consider implications for other parts of the codebase\n\n"
        "Current repository state:\n{current_files}\n\n"
    ),
    "create_consolidated_pr": (
        "Create a descriptive title and summary for a pull request that consolidates multiple changes.\n\n"
        "Guidelines:\n"
        "1. Title should:\n"
        "   - Be clear and descriptive\n"
        "   - Summarize the main themes of the changes\n"
        "   - Be concise but informative\n\n"
        "2. Description should:\n"
        "   - Explain the overall purpose of the changes\n"
        "   - Highlight key modifications and their benefits\n"
        "   - Note any important dependencies or considerations\n\n"
        "3. Changes section should:\n"
        "   - List major functional changes\n"
        "   - Group related changes together\n"
        "   - Highlight architectural changes\n\n"
        "4. Tests section should:\n"
        "   - Describe verification steps taken\n"
        "   - Note any test additions or modifications\n"
        "   - Highlight important test coverage\n\n"
        "Focus on providing high-level insights about the changes rather than mechanical details.\n"
        "The list of PRs, files changed, and other mechanical details will be added automatically.\n"
    ),
    "decompose_feature": (
        "Your task is to break down the following feature request into small, discrete subtasks:\n\n"
        "Feature: {feature_description}\n"
        "Repository: {repo_url}\n\n"
        "Output JSON: {output_json_path}\n\n"
        "For each subtask, you must provide:\n"
        "1. A clear, specific title\n"
        "2. A detailed description of the work required\n"
        "3. Clear acceptance criteria that can be verified\n\n"
        "Guidelines for task breakdown:\n"
        "- Each task should follow the Single Responsibility Principle - do one thing and do it well\n"
        "- Tasks should represent a single logical change (e.g., one schema change, one API endpoint)\n"
        "- Tasks should be independently testable\n"
        "- Tasks should be small enough that their implementation approach is clear\n"
        "- Consider separation of concerns (e.g., separate backend/frontend/database tasks)\n"
        "- Include necessary setup/infrastructure tasks\n"
        "- Consider testing requirements\n"
        "- Account for documentation needs\n"
        "- Work must be quantitative and measurable\n"
        "Current repository structure:\n{current_files}\n\n"
    ),
    "validate_subtasks": (
        "Review the following subtasks to ensure they meet these criteria:\n"
        "1. Each task follows the Single Responsibility Principle\n"
        "2. Each task represents a single logical change\n"
        "3. Tasks are independently testable\n"
        "4. Acceptance criteria are specific and verifiable\n"
        "5. No critical aspects of the feature are missing\n\n"
        "Subtasks to validate:\n{subtasks}\n\n"
        "If any issues are found, provide specific recommendations for improvement."
    ),
}
